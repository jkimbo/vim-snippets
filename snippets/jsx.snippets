snippet icx
    import cx from 'classnames';
snippet iimpt
    import ImmutablePropTypes from 'react-immutable-proptypes';
snippet ipt
    import React, { PropTypes } from 'react';
snippet rcc
    import React from 'react';

    export default class ${1:ClassName} extends React.Component {
      render() {
        return (
          ${0:<div />}
        );
      }
    }
snippet con
    constructor(props) {
        super(props);
    }

snippet pt
    ${1:ClassName}.propTypes = {
      ${2}: PropTypes.${3:string},
    };
snippet dp
    ${1:ClassName}.defaultProps = {
      ${2}: ${3},
    };
snippet bf
    this.${1:FunctionName} = this.$1.bind(this);

snippet cdm
    componentDidMount: function() {
        ${1}
    },
snippet cdup
    componentDidUpdate: function(prevProps, prevState) {
        ${1}
    },
snippet cwm
    componentWillMount: function() {
        ${1}
    },
snippet cwr
    componentWillReceiveProps: function(nextProps) {
        ${1}
    },
snippet cwun
    componentWillUnmount: function() {
        ${1}
    },
snippet cwu
    componentWillUpdate: function(nextProps, nextState) {
        ${1}
    },
snippet cx
    cx({
        ${1}: ${2}
    });
snippet fup
    forceUpdate(${1:callback});
snippet gdp
    getDefaultProps: function() {
        return {
            ${1}
        };
    },
snippet gis
    getInitialState: function() {
        return {
            ${1}: ${2}
        };
    },
snippet ism
    isMounted()
snippet ren
    render() {
      return (
        ${1:<div />}
      );
    }
snippet sst
    setState({
        ${1}: ${2}
    });
snippet scu
    shouldComponentUpdate: function(nextProps, nextState) {
        ${1}
    },
snippet props
    this.props.${1}
snippet state
    this.state.${1}
snippet trp
    transferPropsTo(${1});
